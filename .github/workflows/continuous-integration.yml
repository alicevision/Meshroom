name: Continuous Integration

on:
  push:
    branches:
      - master
      - develop
    # Skip jobs when only documentation files are changed
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'docs/**'

env:
  CI: True

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9.13 ]
    env:
      MESHROOM_NODES_PATH: '${{ github.workspace }}/../meshroomNodes/meshroom/nodes'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Clone meshroomNodes
      run: |
        cd ..
        git clone https://github.com/alicevision/meshroomNodes.git
        cd ${{ github.workspace }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt -r dev_requirements.txt --timeout 45
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/
        pytest --cov --cov-report=xml --junitxml=junit.xml
    - name: Upload results to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ 3.9.13 ]
    env:
      MESHROOM_NODES_PATH: '${{ github.workspace }}/../meshroomNodes/meshroom/nodes'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clone meshroomNodes
        run: |
          cd ..
          git clone https://github.com/alicevision/meshroomNodes.git
          cd ${{ github.workspace }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt -r dev_requirements.txt --timeout 45
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest tests/
